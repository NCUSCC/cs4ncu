# 文件名: .github/workflows/pr-validation.yml
name: 'PR 构建与预览验证'

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

# 申请部署到 Pages 所需的权限
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pr-validation-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  build-and-deploy-preview:
    name: '构建并部署预览'
    runs-on: ubuntu-latest
    
    # 你可以添加一个环境来在 PR 页面显示预览链接
    environment:
      name: pr-preview-${{ github.event.pull_request.number }}
      url: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-preview/pr-${{ github.event.pull_request.number }}/
      
    steps:
      # 步骤 1: 智能文件变更检测 (可选，如果想每次都跑可以删掉这一步)
      - name: 🔍 智能文件变更检测
        id: changes
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: |
          changed_files=$(git diff --name-only ${{ github.event.pull_request.base.sha }}...${{ github.event.pull_request.head.sha }})
          build_patterns=("^docs/" "^mkdocs\.yml$" "^\.github/workflows/")
          should_build="false"
          for pattern in "${build_patterns[@]}"; do
            if [[ "$changed_files" =~ $pattern ]]; then
              should_build="true"
              break
            fi
          done
          echo "should-build=$should_build" >> $GITHUB_OUTPUT

      # 步骤 2: 构建网站
      - name: 🔨 构建预览网站
        if: steps.changes.outputs.should-build == 'true'
        # 我们需要重新 checkout PR 的代码
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      # --- 这里是你所有的构建和验证步骤 ---
      - name: Set up Python
        if: steps.changes.outputs.should-build == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install uv
        if: steps.changes.outputs.should-build == 'true'
        run: pipx install uv

      - name: Cache dependencies
        if: steps.changes.outputs.should-build == 'true'
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}-pr

      - name: Install dependencies
        if: steps.changes.outputs.should-build == 'true'
        run: uv sync

      - name: 严格模式构建验证
        if: steps.changes.outputs.should-build == 'true'
        run: uv run mkdocs build --clean --strict --verbose
      
      # 步骤 3: 部署到 GitHub Pages (预览环境)
      - name: 🌐 部署预览环境
        if: steps.changes.outputs.should-build == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          destination_dir: pr-preview/pr-${{ github.event.pull_request.number }}
          keep_files: false # 每次都覆盖